<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-27T16:16:02 IST" name="Chat API Suite" finished-at="2025-08-27T16:18:15 IST" duration-ms="132342">
    <groups>
    </groups>
    <test started-at="2025-08-27T16:16:02 IST" name="Chat API Test" finished-at="2025-08-27T16:18:15 IST" duration-ms="132342">
      <class name="ChatAPIContentValidationTest">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:ChatAPIContentValidationTest@52b1beb6]" started-at="2025-08-27T16:16:02 IST" name="setupReport" finished-at="2025-08-27T16:16:02 IST" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method signature="testChatAPIResponseValidation(java.lang.String,[Ljava.lang.String;)[pri:0, instance:ChatAPIContentValidationTest@52b1beb6]" started-at="2025-08-27T16:16:02 IST" name="testChatAPIResponseValidation" data-provider="messagePayloads" finished-at="2025-08-27T16:16:38 IST" duration-ms="35468" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Show me order details of 788, including stock availability and customer details, and highlight the articles that are low or out of stock]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@331acdad]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[One or more expected fragments were not found in the response. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: One or more expected fragments were not found in the response. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at ChatAPIContentValidationTest.testChatAPIResponseValidation(ChatAPIContentValidationTest.java:167)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChatAPIResponseValidation -->
        <test-method signature="testChatAPIResponseValidation(java.lang.String,[Ljava.lang.String;)[pri:0, instance:ChatAPIContentValidationTest@52b1beb6]" started-at="2025-08-27T16:16:38 IST" name="testChatAPIResponseValidation" data-provider="messagePayloads" finished-at="2025-08-27T16:17:14 IST" duration-ms="35950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Plot a bar chart comparing revenue and order count for December 2024 sales revenue by day]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@53f0a4cb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChatAPIResponseValidation -->
        <test-method signature="testChatAPIResponseValidation(java.lang.String,[Ljava.lang.String;)[pri:0, instance:ChatAPIContentValidationTest@52b1beb6]" started-at="2025-08-27T16:17:14 IST" name="testChatAPIResponseValidation" data-provider="messagePayloads" finished-at="2025-08-27T16:18:15 IST" duration-ms="60891" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Compose a well-formatted American-style business email with a quote for existing customer Enni Kivi for articles 1139 and 3876, apply discounts and shipping as per policies, include the total, shipping, and discount in the quote. Use a single table to show all the articles, subtotal, discount, shipping and total; Add a summary section with total before discount, total discount ($ and %), subtotal, shipping and total.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3d97a632]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChatAPIResponseValidation -->
        <test-method is-config="true" signature="flushReportAndWriteFailures()[pri:0, instance:ChatAPIContentValidationTest@52b1beb6]" started-at="2025-08-27T16:18:15 IST" name="flushReportAndWriteFailures" finished-at="2025-08-27T16:18:15 IST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReportAndWriteFailures -->
      </class> <!-- ChatAPIContentValidationTest -->
    </test> <!-- Chat API Test -->
  </suite> <!-- Chat API Suite -->
</testng-results>
